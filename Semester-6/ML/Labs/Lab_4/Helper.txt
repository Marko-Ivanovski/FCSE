Прво, ги импортирав сите потребни библиотеки. Потоа, го вчитав dataset-от од Car Evaluation, кој што има неколку атрибути како buying, maint, doors, persons, lug_boot, safety, и последната колона е class, што всушност ја предвидуваме.

Откако го вчитав dataset-от, направив кратка анализа за да видам како изгледаат податоците. Проверив какви вредности има во секоја колона, и колку примери вкупно има. Сите атрибути беа категоријални.

Следниот чекор беше preprocessing, односно подготовка на податоцитe. За Decision Tree и Random Forest, ги претворив категоријалните вредности во броеви со Label Encoding, бидејќи овие модели знаат да работат со такви вредности. За Neural Network, користев One-Hot Encoding, бидејќи neural networks подобро функционираат кога секоја категорија е претставена со посебна binary колона. Потоа ги поделив податоците на training и test сетови, за да можам да видам колку добро моделите ќе предвидуваат на unseen data.

Преминав на имплементација на моделите. Прво, тренирав Decision Tree модел и експериментирав со параметрите како max_depth и min_samples_split, за да не дојде до overfitting. Со овој модел добив околу 94% accuracy на test сетот, што е супер резултат. Го визуелизирав дрвото за да видам како точно носи одлуки моделот, и забележав дека safety и maint се едни од најважните атрибути.

Потоа, пробав Random Forest модел. Овој модел користи повеќе дрва и ги комбинира нивните резултати, па затоа обично е по-точен и поотпорен на overfitting. Експериментирав со n_estimators и други параметри, и добив accuracy од скоро 97%. И тука, најважни атрибути беа safety, persons, и buying.

На крај, тренирав Neural Network модел. Го дизајнирав со две hidden layers, го сетував activation на logistic и learning rate на 0.01. Овој модел постигна највисок accuracy, скоро 99.4%, што покажува дека neural networks се многу моќни за вакви dataset-и каде што има јасни шеми во податоците. Кога го зголемив learning rate-от на 0.1 имаше малце подобрување на резултати, но ништо значајно, и највероатно е дојдено до тоа поради едноставниот dataset.

Како заклучок, сите модели работеа многу добро бидејќи Car Evaluation dataset-от е релативно едноставен за моделирање, а разликите помеѓу training и test accuracy беа мали, што значи дека немавме проблем со overfitting. Најголема предност на Decision Tree е што може лесно да се објасни, Random Forest дава повисока точност и стабилност, а Neural Network дава највисока точност ако е добро подесен, но е малку потежок за објаснување.